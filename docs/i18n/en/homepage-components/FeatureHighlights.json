{
  "homepage.features.title.prefix": {
    "message": "Powerful features, ",
    "description": "First part of features section title"
  },
  "homepage.features.title.gradient": {
    "message": "minimal API ðŸª¶",
    "description": "Gradient part of features section title"
  },
  "homepage.features.category.core": {
    "message": "Core Features",
    "description": "Core features category title"
  },
  "homepage.features.category.frameworks": {
    "message": "Framework Integration",
    "description": "Framework integration category title"
  },
  "homepage.features.category.dev_experience": {
    "message": "Developer Experience",
    "description": "Developer experience category title"
  },
  "homepage.features.badge.new": {
    "message": "NEW",
    "description": "New badge on feature cards"
  },
  "homepage.features.zero_dependencies.title": {
    "message": "Zero Dependencies",
    "description": "Zero dependencies feature title"
  },
  "homepage.features.zero_dependencies.description": {
    "message": "No bloat, no overhead, just pure performance with a tiny footprint that won't slow down your application.",
    "description": "Zero dependencies feature description"
  },
  "homepage.features.computed_values.title": {
    "message": "Computed Values",
    "description": "Computed values feature title"
  },
  "homepage.features.computed_values.description": {
    "message": "Create reactive derived state that updates automatically when dependencies change, with full TypeScript support.",
    "description": "Computed values feature description"
  },
  "homepage.features.reactivity.title": {
    "message": "Fine-grained Reactivity",
    "description": "Reactivity feature title"
  },
  "homepage.features.reactivity.description": {
    "message": "Signal-based tracking for optimal performance, updating only what changed, with automatic dependency tracking.",
    "description": "Reactivity feature description"
  },
  "homepage.features.framework_integration.title": {
    "message": "Frameworks!",
    "description": "Framework integration feature title"
  },
  "homepage.features.framework_integration.description": {
    "message": "First-class support for React and Preact with dedicated hooks that make state management simple and intuitive.",
    "description": "Framework integration feature description"
  },
  "homepage.features.remix_integration.title": {
    "message": "Remixing Remix",
    "description": "Remix integration feature title"
  },
  "homepage.features.remix_integration.description": {
    "message": "Full-stack state management for Remix applications with server-side features, automatic hydration, and form handling.",
    "description": "Remix integration feature description"
  },
  "homepage.features.remix_integration.bullet1.prefix": {
    "message": "",
    "description": "Text before code in first bullet point for Remix integration"
  },
  "homepage.features.remix_integration.bullet1.code": {
    "message": "useJods()",
    "description": "Code part in first bullet point for Remix integration"
  },
  "homepage.features.remix_integration.bullet1.suffix": {
    "message": " for unified store access and form handling",
    "description": "Text after code in first bullet point for Remix integration"
  },
  "homepage.features.remix_integration.bullet2.prefix": {
    "message": "",
    "description": "Text before code in second bullet point for Remix integration"
  },
  "homepage.features.remix_integration.bullet2.code": {
    "message": "defineStore()",
    "description": "Code part in second bullet point for Remix integration"
  },
  "homepage.features.remix_integration.bullet2.suffix": {
    "message": " for declarative server-aware stores",
    "description": "Text after code in second bullet point for Remix integration"
  },
  "homepage.features.remix_integration.bullet3.prefix": {
    "message": "",
    "description": "Text before code in third bullet point for Remix integration"
  },
  "homepage.features.remix_integration.bullet3.code": {
    "message": "useJodsStore()",
    "description": "Code part in third bullet point for Remix integration"
  },
  "homepage.features.remix_integration.bullet3.suffix": {
    "message": " for reactive state subscription",
    "description": "Text after code in third bullet point for Remix integration"
  },
  "homepage.features.remix_integration.bullet4.prefix": {
    "message": "",
    "description": "Text before code in fourth bullet point for Remix integration"
  },
  "homepage.features.remix_integration.bullet4.code": {
    "message": "useJodsForm()",
    "description": "Code part in fourth bullet point for Remix integration"
  },
  "homepage.features.remix_integration.bullet4.suffix": {
    "message": " for implicit action dispatching",
    "description": "Text after code in fourth bullet point for Remix integration"
  },
  "homepage.features.mental_model.title": {
    "message": "Simple Mental Model",
    "description": "Mental model feature title"
  },
  "homepage.features.mental_model.description": {
    "message": "Just use objects directly - no actions, reducers, or boilerplate to manage your state. Mutate and subscribe with ease.",
    "description": "Mental model feature description"
  },
  "homepage.features.json_snapshots.title": {
    "message": "JSON Snapshots",
    "description": "JSON snapshots feature title"
  },
  "homepage.features.json_snapshots.description": {
    "message": "Get serializable state snapshots on demand with json() - perfect for APIs, persistence, and time-travel debugging.",
    "description": "JSON snapshots feature description"
  },
  "homepage.features.debugging.title": {
    "message": "Transparent Debugging",
    "description": "Debugging feature title"
  },
  "homepage.features.debugging.description": {
    "message": "Inspect your state at any time, with built-in history tracking and time-travel debugging capabilities.",
    "description": "Debugging feature description"
  }
}
