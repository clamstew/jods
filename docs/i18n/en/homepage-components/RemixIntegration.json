{
  "homepage.remix.title.remix": {
    "message": "Remix",
    "description": "Remix part of the Remix integration title"
  },
  "homepage.remix.title.state": {
    "message": "State",
    "description": "State part of the Remix integration title"
  },
  "homepage.remix.title.reimagined": {
    "message": "Reimagined",
    "description": "Reimagined part of the Remix integration title"
  },
  "homepage.remix.subtitle.modern": {
    "message": "Modern Data Layer",
    "description": "Modern data layer subtitle for Remix integration"
  },
  "homepage.remix.subtitle.for_remix": {
    "message": "for Remix",
    "description": "For Remix subtitle"
  },
  "homepage.remix.subtitle.description": {
    "message": "reactive, typed, and persistence-ready",
    "description": "Description in subtitle for Remix integration"
  },
  "homepage.remix.features.sync.title": {
    "message": "Automatic Sync",
    "description": "Sync feature title in Remix integration"
  },
  "homepage.remix.features.sync.description": {
    "message": "Server and client state without manual hydration",
    "description": "Sync feature description in Remix integration"
  },
  "homepage.remix.features.reactivity.title": {
    "message": "Provides Real Reactivity",
    "description": "Reactivity feature title in Remix integration"
  },
  "homepage.remix.features.reactivity.description": {
    "message": "For optimistic UI updates",
    "description": "Reactivity feature description in Remix integration"
  },
  "homepage.remix.features.zod.title": {
    "message": "Uses Zod Schemas",
    "description": "Zod feature title in Remix integration"
  },
  "homepage.remix.features.zod.description": {
    "message": "For runtime type validation and great DX",
    "description": "Zod feature description in Remix integration"
  },
  "homepage.remix.features.backend.title": {
    "message": "Works with Any Backend",
    "description": "Backend feature title in Remix integration"
  },
  "homepage.remix.features.backend.description": {
    "message": "(Prisma, MongoDB, SQLite, etc.)",
    "description": "Backend feature description in Remix integration"
  },
  "homepage.remix.features.model.title": {
    "message": "Provides a Consistent Model",
    "description": "Model feature title in Remix integration"
  },
  "homepage.remix.features.model.description": {
    "message": "Uniform pattern across your app",
    "description": "Model feature description in Remix integration"
  },
  "homepage.remix.tabs.traditional": {
    "message": "Traditional Remix",
    "description": "Traditional Remix tab label"
  },
  "homepage.remix.tabs.traditional_short": {
    "message": "Traditional",
    "description": "Short label for Traditional Remix tab on mobile"
  },
  "homepage.remix.tabs.model": {
    "message": "1. jods: Define Model",
    "description": "Model tab label in Remix integration"
  },
  "homepage.remix.tabs.model_short": {
    "message": "1. Model",
    "description": "Short label for Model tab on mobile"
  },
  "homepage.remix.tabs.component": {
    "message": "2. jods: Use Component",
    "description": "Component tab label in Remix integration"
  },
  "homepage.remix.tabs.component_short": {
    "message": "2. Component",
    "description": "Short label for Component tab on mobile"
  },
  "homepage.remix.footer.button.explore": {
    "message": "Explore Remix Integration",
    "description": "Text for the Explore Remix Integration button"
  },
  "homepage.remix.footer.button.explore_short": {
    "message": "Remix Guide",
    "description": "Short text for the Explore Remix Integration button on mobile"
  },
  "homepage.remix.footer.button.active_record": {
    "message": "Learn About Active Record",
    "description": "Text for the Learn About Active Record button"
  },
  "homepage.remix.footer.button.active_record_short": {
    "message": "Active Record",
    "description": "Short text for the Learn About Active Record button on mobile"
  }
}
