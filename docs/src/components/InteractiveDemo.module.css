/* Interactive Demo Component Styles */

/* Demo container layout */
.demoContainer {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 3rem;
  margin: 3rem 0;
  align-items: start;
}

@media (max-width: 996px) {
  .demoContainer {
    grid-template-columns: 1fr;
  }
}

.persistenceTooltipContent {
  min-width: 220px;
}

.persistenceTooltipTitle {
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.persistenceTooltipInfo {
  font-size: 0.75rem;
  color: #bbb;
  margin-bottom: 0.5rem;
}

.persistenceTooltipExpiry {
  font-size: 0.75rem;
  color: #ffc107;
  margin-bottom: 0.5rem;
}

.persistenceTooltipTime {
  font-size: 0.75rem;
  color: #aaa;
  font-family: var(--ifm-font-family-monospace);
}

/* Standardize all editor controls to match height */
.editorControls {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

/* Persistence toggle in the editor header - match zoom button dimensions */
.persistenceToggle {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 22px;
  height: 22px;
  border-radius: 4px;
  background-color: var(--ifm-color-emphasis-200);
  color: var(--ifm-color-emphasis-600);
  cursor: pointer;
  margin-right: 0.5rem;
  transition: all 0.2s ease;
  font-size: 13px;
  line-height: 1;
}

.persistenceToggle:hover {
  background-color: var(--ifm-color-emphasis-300);
}

/* More subtle color for enabled state - use grayed out style instead of color highlight */
.persistenceEnabled {
  background-color: var(--ifm-color-emphasis-300);
  color: var(--ifm-color-emphasis-800);
}

.persistenceEnabled:hover {
  background-color: var(--ifm-color-emphasis-400);
}

:global([data-theme="dark"]) .persistenceEnabled {
  background-color: var(--ifm-color-emphasis-200);
  color: var(--ifm-color-emphasis-800);
}

:global([data-theme="dark"]) .persistenceEnabled:hover {
  background-color: var(--ifm-color-emphasis-300);
}

/* Make all editor buttons consistent */
.editorButton {
  height: 22px;
  width: 22px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  background-color: var(--ifm-color-emphasis-200);
  color: var(--ifm-color-emphasis-700);
  cursor: pointer;
  transition: all 0.2s;
}

.editorButton:hover {
  background-color: var(--ifm-color-emphasis-300);
  color: var(--ifm-color-emphasis-900);
}

/* Persistence indicator container */
.persistenceIndicator {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin: 0 auto 1rem;
  max-width: 1200px;
  padding: 0.6rem 1rem;
  border-radius: 8px;
  background-color: #f0f7ff;
  border-left: 3px solid #3b82f6;
}

:global([data-theme="dark"]) .persistenceIndicator {
  background-color: rgba(59, 130, 246, 0.1);
  border-left: 3px solid #3b82f6;
}

.persistenceIndicator .toggleContainer {
  margin: 0;
}

.persistenceIndicator .toggleLabel {
  margin-right: 0.8rem;
}

/* Controls section styling */
.controls {
  display: flex;
  flex-direction: column;
  background: var(--ifm-card-background-color);
  border-radius: 16px;
  padding: 2rem;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
  border: 1px solid var(--ifm-color-emphasis-200);
}

.controlGroup {
  margin-bottom: 1.5rem;
}

.controlGroup label {
  font-size: 1.1rem;
  margin-bottom: 0.6rem;
  font-weight: 600;
  display: block;
  color: var(--ifm-color-emphasis-900);
}

.controlGroup input,
.controlGroup select {
  width: 100%;
  padding: 0.8rem 1rem;
  border-radius: 10px;
  border: 2px solid var(--ifm-color-emphasis-200);
  background: var(--ifm-background-color);
  font-size: 1rem;
  transition: all 0.2s ease;
}

.controlGroup input:focus,
.controlGroup select:focus {
  outline: none;
  border-color: var(--ifm-color-primary);
  box-shadow: 0 0 0 3px rgba(var(--ifm-color-primary-rgb), 0.2);
}

.controlGroup select {
  appearance: none;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 9l6 6 6-6"/></svg>');
  background-repeat: no-repeat;
  background-position: right 1rem center;
  padding-right: 2.5rem;
}

/* Instruction box styling */
.instructionBox {
  border-radius: 16px;
  margin-bottom: 0;
  padding: 1.8rem;
  background: linear-gradient(145deg, #2c5282, #0891b2);
  border: none;
  box-shadow: 0 8px 30px rgba(8, 145, 178, 0.2);
}

/* Dark mode instruction box styling */
:global([data-theme="dark"]) .instructionBox {
  background: linear-gradient(145deg, #a75a6b, #c26a5a);
  box-shadow: 0 8px 30px rgba(194, 106, 90, 0.2);
}

.instructionText {
  margin: 0;
  font-size: 1.1rem;
  font-weight: 500;
  line-height: 1.7;
  text-align: left;
  color: white;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
}

.instructionIconWrapper {
  display: flex;
  align-items: center;
  margin-bottom: 12px;
  font-weight: 700;
}

.instructionIcon {
  font-size: 1.3rem;
  margin-right: 10px;
  display: inline-block;
  filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.3));
  transition: transform 0.3s ease;
}

.instructionBox:hover .instructionIcon {
  transform: scale(1.1);
}

/* Code preview styling */
.codePreview {
  height: 100%;
  overflow: auto;
  padding: 0;
}

.codePreview :global(.prism-code) {
  white-space: pre-wrap !important;
  word-break: break-word !important;
  overflow-wrap: break-word !important;
  max-height: 100%;
  overflow-y: auto !important;
}

/* Container elements */
.sectionContainer {
  padding: 1rem 0;
  margin: 3rem 0;
}

.sectionTitle {
  text-align: center;
  margin-bottom: 2rem;
  position: relative;
  font-size: 2.2rem;
  font-weight: 800;
  color: var(--jods-blue-dark);
}

/* Dark mode title styling */
:global([data-theme="dark"]) .sectionTitle {
  color: white;
}

/* Add the underline effect that was in the global section-title */
.sectionTitle:after {
  content: "";
  position: absolute;
  bottom: -1rem;
  left: 50%;
  transform: translateX(-50%);
  width: 80px;
  height: 4px;
  background: linear-gradient(
    90deg,
    var(--jods-cyan) 0%,
    var(--jods-blue) 100%
  );
  border-radius: 2px;
}

/* Dark mode styling for the underline */
:global([data-theme="dark"]) .sectionTitle:after {
  background: linear-gradient(
    90deg,
    var(--jods-orange-desaturated) 0%,
    var(--ifm-color-primary) 100%
  );
}

.sectionDescription {
  text-align: center;
  max-width: 700px;
  margin: 0 auto 1rem;
}

.marketingText {
  font-size: 1.4rem;
  font-weight: 500;
  letter-spacing: 0.03em;
  background: linear-gradient(
    90deg,
    var(--jods-cyan) 0%,
    var(--jods-blue) 100%
  );
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  display: block;
  margin-bottom: 0.5rem;
}

:global([data-theme="dark"]) .marketingText {
  background: linear-gradient(90deg, #ffb066 0%, #ff4e62 100%);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  text-shadow: 0 0 15px rgba(255, 158, 102, 0.5);
  filter: brightness(1.4) contrast(1.3);
  position: relative;
  z-index: 1;
}

:global([data-theme="dark"]) .marketingText::before {
  content: attr(data-text);
  position: absolute;
  left: 0;
  top: 0;
  z-index: -1;
  background: transparent;
  -webkit-text-stroke: 1px rgba(255, 255, 255, 0.2);
  -webkit-text-fill-color: transparent;
}

.screenReaderText {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/* Modern editor container */
.editorContainer {
  margin: 1.5rem auto;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
  background-color: var(--ifm-card-background-color);
  border: 1px solid var(--ifm-color-emphasis-200);
  display: flex;
  flex-direction: column;
  max-width: 1200px;
  height: 580px; /* Slightly reduced height */
}

:global([data-theme="dark"]) .editorContainer {
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25);
}

/* Rocket shake animation */
@keyframes rocketShake {
  0% {
    transform: translate(0, 0) rotate(0deg);
  }
  25% {
    transform: translate(-1px, -1px) rotate(-1deg);
  }
  50% {
    transform: translate(0px, -2px) rotate(1deg);
  }
  75% {
    transform: translate(1px, -1px) rotate(-0.5deg);
  }
  100% {
    transform: translate(0px, 0px) rotate(0.5deg);
  }
}

.animatedRocketShake {
  display: inline-block;
  animation: rocketShake 0.5s ease-in-out infinite alternate; /* Alternating shake */
}

/* Editor header with tabs */
.editorHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 0.5rem;
  background-color: var(--ifm-color-emphasis-100);
  border-bottom: 1px solid var(--ifm-color-emphasis-200);
  height: 40px;
}

.tabsContainer {
  display: flex;
  height: 100%;
}

.tab {
  padding: 0 1.2rem;
  display: flex;
  align-items: center;
  font-size: 0.9rem;
  font-family: var(--ifm-font-family-monospace);
  height: 100%;
  border-right: 1px solid var(--ifm-color-emphasis-200);
  color: var(--ifm-color-emphasis-600);
  cursor: pointer;
  transition: background-color 0.2s;
}

.tab:hover {
  background-color: var(--ifm-color-emphasis-200);
}

.activeTab {
  background-color: var(--ifm-card-background-color);
  color: var(--ifm-color-emphasis-900);
  position: relative;
}

.activeTab:after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: var(--ifm-color-primary);
}

/* Editor content split panes - updated for 3-column layout */
.editorContent {
  display: grid;
  grid-template-columns: minmax(220px, 0.25fr) minmax(400px, 0.5fr) minmax(
      220px,
      0.25fr
    );
  flex: 1;
  overflow: hidden;
  height: calc(100% - 80px); /* Account for header and footer */
}

@media (max-width: 996px) {
  .editorContent {
    grid-template-columns: 1fr;
    grid-template-rows: auto 1fr auto;
    overflow-y: auto;
  }
}

.editorPanel {
  height: 100%;
  overflow: auto;
  position: relative;
}

/* Add borders between panels */
.editorPanel:first-child,
.editorPanel:nth-child(2) {
  border-right: 1px solid var(--ifm-color-emphasis-200);
}

/* Make panels more compact */
.editorForm {
  padding: 0.7rem;
}

.formGroupTitle {
  font-size: 0.75rem;
  margin-bottom: 0.5rem;
}

.formGroup {
  margin-bottom: 0.6rem;
}

.formGroup label {
  display: flex;
  align-items: center;
  margin-bottom: 0.3rem;
}

.labelText {
  font-size: 0.8rem;
  font-weight: 500;
  color: var(--ifm-color-emphasis-800);
}

.formGroup input,
.formGroup select {
  width: 100%;
  padding: 0.4rem 0.6rem;
  border-radius: 6px;
  border: 2px solid var(--ifm-color-emphasis-300);
  background: var(--ifm-background-color);
  font-size: 0.85rem;
  color: var(--ifm-color-emphasis-900);
  transition: all 0.2s;
}

.formGroup input:focus,
.formGroup select:focus {
  outline: none;
  border-color: var(--ifm-color-primary);
  box-shadow: 0 0 0 2px rgba(var(--ifm-color-primary-rgb), 0.15);
}

.formGroup select {
  appearance: none;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 9l6 6 6-6"/></svg>');
  background-repeat: no-repeat;
  background-position: right 0.8rem center;
  padding-right: 2rem;
}

/* Update animations for input fields */
.updatedInput {
  animation: flashGreen 1s ease;
  border-color: #4caf50 !important;
  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.15) !important;
}

@keyframes flashGreen {
  0% {
    background-color: rgba(76, 175, 80, 0.3);
    border-color: #4caf50;
  }
  100% {
    background-color: transparent;
    border-color: var(--ifm-color-emphasis-300);
  }
}

/* Computed values display */
.computedResults {
  margin-top: 1.2rem;
  padding-top: 1rem;
  border-top: 1px solid var(--ifm-color-emphasis-200);
}

.computedItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.4rem 0.6rem;
  background-color: var(--ifm-color-emphasis-100);
  border-radius: 6px;
  margin-bottom: 0.5rem;
}

.computedLabel {
  font-family: var(--ifm-font-family-monospace);
  font-size: 0.8rem;
  color: var(--jods-blue);
}

:global([data-theme="dark"]) .computedLabel {
  color: var(--jods-orange-desaturated);
}

.computedValue {
  font-family: var(--ifm-font-family-monospace);
  font-size: 0.8rem;
  font-weight: 600;
}

/* Computed values update animation */
.computedUpdated {
  animation: highlightComputed 1s ease;
}

@keyframes highlightComputed {
  0% {
    background-color: rgba(76, 175, 80, 0.2);
    transform: scale(1.03);
  }
  100% {
    background-color: var(--ifm-color-emphasis-100);
    transform: scale(1);
  }
}

/* Editor footer */
.editorFooter {
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 1rem;
  background-color: var(--ifm-color-emphasis-100);
  border-top: 1px solid var(--ifm-color-emphasis-200);
  font-size: 0.8rem;
  color: var(--ifm-color-emphasis-600);
}

.editorStatus {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.statusDot {
  height: 6px;
  width: 6px;
  border-radius: 50%;
  background-color: #4caf50;
  box-shadow: 0 0 8px rgba(76, 175, 80, 0.6);
  animation: pulse 2s infinite;
}

.statusActive {
  background-color: #4caf50;
  box-shadow: 0 0 12px rgba(76, 175, 80, 0.8);
  animation: activePulse 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) infinite;
}

@keyframes activePulse {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes pulse {
  0% {
    opacity: 0.6;
    transform: scale(0.9);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
  }
  100% {
    opacity: 0.6;
    transform: scale(0.9);
  }
}

.editorInfo {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

/* Floating panel styles */
.floatingPanel {
  padding: 0.5rem;
  margin-bottom: 0.7rem;
}

.panelHeading {
  margin-bottom: 0.4rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.panelTitle {
  display: flex;
  align-items: center;
  margin: 0;
  font-size: 0.95rem;
  font-weight: 600;
}

.panelIcon {
  margin-right: 0.4rem;
  font-size: 1.1rem;
}

.formControls {
  display: grid;
  grid-template-columns: 1fr;
  gap: 0.6rem;
}
.liveBadge {
  display: flex;
  align-items: center;
  background: rgba(97, 218, 251, 0.1);
  color: rgb(97, 218, 251);
  padding: 0.2rem 0.5rem;
  border-radius: 50px;
  font-size: 0.7rem;
  font-weight: 600;
}

.pulseDot {
  display: inline-block;
  width: 8px;
  height: 8px;
  background: rgb(97, 218, 251);
  border-radius: 50%;
  margin-right: 0.5rem;
  animation: pulse 2s infinite;
}

/* Output panel styling for sidebar */
.outputPanel {
  height: 100%;
  display: flex;
  flex-direction: column;
  padding: 0.6rem;
  font-size: 0.9rem;
  overflow: auto;
}

.outputPanelTitle {
  font-size: 0.9rem;
  font-weight: 600;
  margin: 0.5rem 0 0.8rem;
  color: var(--ifm-color-emphasis-700);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  padding-left: 0.5rem;
  position: sticky;
  top: 0;
  background: var(--ifm-card-background-color);
  z-index: 1;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

/* Preview card for React preview */
.previewCard {
  display: flex;
  align-items: center;
  padding: 0.8rem;
  background: var(--ifm-card-background-color);
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
  border: 1px solid var(--ifm-color-emphasis-200);
  margin-bottom: 1rem;
  border-radius: 8px;
}

.previewAvatar {
  width: 48px;
  height: 36px;
  border-radius: 50%;
  background: linear-gradient(145deg, var(--jods-cyan), var(--jods-blue));
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.3rem;
  margin-right: 0.7rem;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

:global([data-theme="dark"]) .previewAvatar {
  background: linear-gradient(
    145deg,
    var(--jods-orange-desaturated),
    var(--ifm-color-primary)
  );
}

/* React component styles */
.reactPreviewComponent {
  text-align: left;
  width: 100%;
}

.reactPreviewName {
  margin: 0 0 0.3rem;
  font-size: 1rem;
  font-weight: 600;
  word-break: break-word;
}

.reactPreviewMood {
  margin: 0;
  font-size: 0.85rem;
  color: var(--ifm-color-emphasis-700);
}

.jsonPreviewExplanation {
  font-size: 0.8rem;
  padding: 0.8rem;
  color: var(--ifm-color-emphasis-700);
  background-color: var(--ifm-color-emphasis-50);
  border-radius: 6px;
  margin-top: 0.5rem;
  line-height: 1.4;
  border-left: 2px solid var(--ifm-color-primary);
}

.jsonPreviewExplanation p {
  margin: 0;
  color: var(--ifm-color-emphasis-800);
}

/* JSON Output Preview */
.jsonPreviewContainer {
  background-color: var(--ifm-color-emphasis-100);
  border-radius: 6px;
  margin-top: 1rem;
  overflow: hidden;
  border: 1px solid var(--ifm-color-emphasis-200);
}

.jsonPreviewHeader {
  display: flex;
  align-items: center;
  padding: 8px 12px;
  background-color: var(--ifm-color-emphasis-200);
  border-bottom: 1px solid var(--ifm-color-emphasis-300);
}

.jsonPreviewDot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  margin-right: 4px;
}

.jsonPreviewDot:nth-child(1) {
  background-color: #ff5f56;
}

.jsonPreviewDot:nth-child(2) {
  background-color: #ffbd2e;
}

.jsonPreviewDot:nth-child(3) {
  background-color: #27c93f;
}

.jsonPreviewTitle {
  margin-left: 8px;
  font-size: 0.8rem;
  color: var(--ifm-color-emphasis-700);
}

.jsonPreviewContent {
  padding: 0.5rem;
  overflow: auto;
  max-height: 400px;
}

/* Console output styling */
.consoleOutput {
  font-family: var(--ifm-font-family-monospace);
  font-size: 0.8rem;
  margin-bottom: 0.8rem;
  color: var(--ifm-color-emphasis-700);
}

.consoleLogLine {
  padding: 0.3rem 0;
  border-bottom: 1px solid var(--ifm-color-emphasis-200);
}

.consoleMethod {
  color: #888;
  margin-right: 0.5rem;
}

.consoleText {
  color: var(--ifm-color-emphasis-900);
}

/* JSON Syntax Highlighting */
.jsonOutput {
  font-size: 0.75rem;
  font-family: var(--ifm-font-family-monospace);
  line-height: 1.4;
  margin-top: 0.5rem;
  padding-top: 0.5rem;
  border-top: 1px dashed var(--ifm-color-emphasis-300);
}

.jsonKey {
  color: var(--jods-blue);
}

.jsonString {
  color: #22c55e;
}

.jsonNumber {
  color: #f59e0b;
}

.jsonBoolean {
  color: #8b5cf6;
}

.jsonNull {
  color: #ef4444;
}

.jsonBrace {
  color: var(--ifm-color-emphasis-600);
}

.jsonIndent {
  padding-left: 1.2rem;
}

.jsonLine {
  padding: 1px 0;
}

/* Media queries for mobile */
@media (max-width: 768px) {
  .editorContent {
    height: auto;
    min-height: 700px;
    grid-template-columns: 1fr;
    grid-template-rows: minmax(300px, auto) minmax(300px, 1fr);
  }

  .editorContainer {
    height: auto;
    min-height: 750px;
  }

  .editorPanel:first-child {
    border-right: none;
    border-bottom: 1px solid var(--ifm-color-emphasis-200);
  }
}
