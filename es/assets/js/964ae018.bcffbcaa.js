"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7443],{1492:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"api-reference","title":"\ud83d\udcda \ud83d\udc3f\ufe0f \ud83e\udd86 API Reference","description":"jods provides a small but powerful API for state management.","source":"@site/docs/api-reference.md","sourceDirName":".","slug":"/api-reference","permalink":"/es/api-reference","draft":false,"unlisted":false,"editUrl":"https://github.com/clamstew/jods/tree/main/docs/docs/api-reference.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"jodsSidebar","previous":{"title":"\ud83d\ude80 Introduction","permalink":"/es/intro"},"next":{"title":"\ud83d\udca1 Examples","permalink":"/es/examples"}}');var r=s(3420),i=s(3774);const o={sidebar_position:2},c="\ud83d\udcda \ud83d\udc3f\ufe0f \ud83e\udd86 API Reference",d={},l=[{value:"\ud83e\uddf0 Core Functions",id:"-core-functions",level:2},{value:"\ud83d\udce6 <code>store(initialState)</code>",id:"-storeinitialstate",level:3},{value:"\ud83d\udcf7 <code>json(store)</code>",id:"-jsonstore",level:3},{value:"\ud83d\udc42 <code>onUpdate(store, callback)</code>",id:"-onupdatestore-callback",level:3},{value:"\ud83e\uddee <code>computed(fn)</code>",id:"-computedfn",level:3},{value:"\ud83d\udd0d <code>diff(oldState, newState)</code>",id:"-diffoldstate-newstate",level:3},{value:"\ud83d\udd70\ufe0f <code>history(store, options?)</code>",id:"\ufe0f-historystore-options",level:3},{value:"\ud83d\udd0b <code>store.batch(fn, batchName?)</code>",id:"-storebatchfn-batchname",level:3},{value:"\ud83d\udd0b <code>store.beginBatch()</code> and <code>store.commitBatch()</code>",id:"-storebeginbatch-and-storecommitbatch",level:3},{value:"\ud83d\udcbe <code>persist(storage, store, options?)</code>",id:"-persiststorage-store-options",level:3},{value:"Advanced Usage",id:"advanced-usage",level:4},{value:"Helper Functions",id:"helper-functions",level:4},{value:"\ud83d\udd0c Framework Integration",id:"-framework-integration",level:2},{value:"\u269b\ufe0f React",id:"\ufe0f-react",level:3},{value:"\u26a1\ufe0f Preact",id:"\ufe0f-preact",level:3},{value:"\ud83d\udcbf Remix",id:"-remix",level:3},{value:"Store",id:"store",level:3},{value:"Implementation Details",id:"implementation-details",level:4},{value:"Subscription Behavior",id:"subscription-behavior",level:4},{value:"API",id:"api",level:4},{value:"Methods",id:"methods",level:4}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"-\ufe0f--api-reference",children:"\ud83d\udcda \ud83d\udc3f\ufe0f \ud83e\udd86 API Reference"})}),"\n",(0,r.jsx)(n.p,{children:"jods provides a small but powerful API for state management."}),"\n",(0,r.jsx)(n.h2,{id:"-core-functions",children:"\ud83e\uddf0 Core Functions"}),"\n",(0,r.jsxs)(n.h3,{id:"-storeinitialstate",children:["\ud83d\udce6 ",(0,r.jsx)(n.code,{children:"store(initialState)"})]}),"\n",(0,r.jsx)(n.p,{children:"Creates a reactive store with the provided initial state."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"initialState"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsx)(n.td,{children:"Initial state object for the store"})]})})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," A reactive store object that can be modified directly"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'import { store } from "jods";\n\nconst counter = store({ count: 0 });\nconsole.log(counter.count); // 0\n\ncounter.count = 1; // Updates the store\nconsole.log(counter.count); // 1\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"-jsonstore",children:["\ud83d\udcf7 ",(0,r.jsx)(n.code,{children:"json(store)"})]}),"\n",(0,r.jsx)(n.p,{children:"Returns a deep-cloned plain JSON snapshot of the store, evaluating all computed properties."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"store"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsxs)(n.td,{children:["A jods store created with ",(0,r.jsx)(n.code,{children:"store()"})]})]})})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," A plain JavaScript object containing the store's state"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { store, json, computed } from \"jods\";\n\nconst user = store({\n  firstName: \"Burt\",\n  lastName: \"Macklin\",\n});\n\n// Add a computed property\nuser.fullName = computed(() => `${user.firstName} ${user.lastName}`);\n\n// Get a JSON snapshot\nconst snapshot = json(user);\nconsole.log(snapshot);\n// { firstName: 'Burt', lastName: 'Macklin', fullName: 'Burt Macklin' }\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"-onupdatestore-callback",children:["\ud83d\udc42 ",(0,r.jsx)(n.code,{children:"onUpdate(store, callback)"})]}),"\n",(0,r.jsx)(n.p,{children:"Registers a callback function that is triggered whenever the store changes."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"store"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsxs)(n.td,{children:["A jods store created with ",(0,r.jsx)(n.code,{children:"store()"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"callback"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Function"})}),(0,r.jsx)(n.td,{children:"Function called when the store state changes with both new and previous state"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," Unsubscribe function that can be called to stop listening for updates"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'import { store, onUpdate, diff } from "jods";\n\nconst counter = store({ count: 0 });\n\n// Subscribe to changes with access to both new and old state\nconst unsubscribe = onUpdate(counter, (newState, oldState) => {\n  console.log("Changed from", oldState.count, "to", newState.count);\n\n  // You can directly use diff to track changes\n  const changes = diff(oldState, newState);\n  console.log("Changes:", changes);\n});\n\ncounter.count = 1; // Logs changes and diff information\n\n// To stop listening for updates\nunsubscribe();\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"-computedfn",children:["\ud83e\uddee ",(0,r.jsx)(n.code,{children:"computed(fn)"})]}),"\n",(0,r.jsx)(n.p,{children:"Creates a computed property that automatically updates when its dependencies change."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"fn"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Function"})}),(0,r.jsx)(n.td,{children:"Function that computes a value based on store properties"})]})})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," A marker that defines a property on the store. The computed value is accessed directly as a property (e.g., ",(0,r.jsx)(n.code,{children:"store.computedProperty"}),"), not as a function call."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udc40 Important:"})," Computed properties are ",(0,r.jsx)(n.strong,{children:"read-only"})," by design. Attempting to assign a value directly to a computed property will throw an error. To update a computed value, you must modify the source properties that it depends on."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'import { store, computed } from "jods";\n\nconst prices = store({\n  items: [10, 20, 30],\n});\n\n// Add a computed property\nprices.total = computed(() =>\n  prices.items.reduce((sum, price) => sum + price, 0)\n);\n\nconsole.log(prices.total); // 60\n\n// Update the items\nprices.items.push(40);\nconsole.log(prices.total); // 100\n\n// This would throw an error:\n// prices.total = 200; // Error: Attempted to set non-settable computed property\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"-diffoldstate-newstate",children:["\ud83d\udd0d ",(0,r.jsx)(n.code,{children:"diff(oldState, newState)"})]}),"\n",(0,r.jsx)(n.p,{children:"Generates a detailed diff object showing changes between two states."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"oldState"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsx)(n.td,{children:"Previous state to compare"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"newState"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsx)(n.td,{children:"Current state to compare"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," An object detailing the differences between states"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'import { store, diff } from "jods";\n\nconst before = store({ name: "Burt", age: 30 });\nconst after = store({ name: "Burt", age: 31 });\n\nconst changes = diff(before, after);\nconsole.log(changes);\n// { age: { __old: 30, __new: 31 } }\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"\ufe0f-historystore-options",children:["\ud83d\udd70\ufe0f ",(0,r.jsx)(n.code,{children:"history(store, options?)"})]}),"\n",(0,r.jsx)(n.p,{children:"Creates a history tracker with time-travel capabilities for a store."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"store"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsxs)(n.td,{children:["A jods store created with ",(0,r.jsx)(n.code,{children:"store()"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsx)(n.td,{children:"Optional configuration options"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options.maxSize"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"Maximum number of history entries to keep (default: 100)"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," A history controller object with the following methods:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u23ee\ufe0f ",(0,r.jsx)(n.code,{children:"back()"}),": Move back one step in history"]}),"\n",(0,r.jsxs)(n.li,{children:["\u23ed\ufe0f ",(0,r.jsx)(n.code,{children:"forward()"}),": Move forward one step in history"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd22 ",(0,r.jsx)(n.code,{children:"travelTo(index)"}),": Jump to a specific point in history"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udcdc ",(0,r.jsx)(n.code,{children:"getHistory()"}),": Get the full history array"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83e\uddf9 ",(0,r.jsx)(n.code,{children:"clear()"}),": Clear the history"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'import { store, history, json } from "jods";\n\nconst counter = store({ count: 0 });\nconst counterHistory = history(counter);\n\n// Make some changes\ncounter.count = 1;\ncounter.count = 2;\n\n// Travel back in time\ncounterHistory.travelTo(0);\nconsole.log(json(counter)); // { count: 0 }\n\n// Move forward\ncounterHistory.forward();\nconsole.log(json(counter)); // { count: 1 }\n'})}),"\n",(0,r.jsxs)(n.p,{children:["For more details on time-travel debugging, see the ",(0,r.jsx)(n.a,{href:"/time-travel-debugging",children:"Time-Travel Debugging"})," page."]}),"\n",(0,r.jsxs)(n.h3,{id:"-storebatchfn-batchname",children:["\ud83d\udd0b ",(0,r.jsx)(n.code,{children:"store.batch(fn, batchName?)"})]}),"\n",(0,r.jsx)(n.p,{children:"Executes a function that makes multiple store updates, treating them as a single atomic update. Subscribers are notified only once after all changes are complete."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"fn"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Function"})}),(0,r.jsx)(n.td,{children:"Function containing multiple store updates"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"batchName"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Optional name for debugging (default: unnamed)"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The return value of the provided function"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'import { store } from "jods";\n\nconst user = store({\n  firstName: "John",\n  lastName: "Doe",\n  isActive: false,\n});\n\n// All updates as one atomic change\nuser.batch(() => {\n  user.firstName = "Jane";\n  user.lastName = "Smith";\n  user.isActive = true;\n});\n'})}),"\n",(0,r.jsxs)(n.p,{children:["For more details on batch operations, see the ",(0,r.jsx)(n.a,{href:"/batch",children:"Batch Updates"})," page."]}),"\n",(0,r.jsxs)(n.h3,{id:"-storebeginbatch-and-storecommitbatch",children:["\ud83d\udd0b ",(0,r.jsx)(n.code,{children:"store.beginBatch()"})," and ",(0,r.jsx)(n.code,{children:"store.commitBatch()"})]}),"\n",(0,r.jsx)(n.p,{children:"Manual control functions for starting and committing batch operations."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'import { store } from "jods";\n\nconst cart = store({ items: [], total: 0 });\n\n// Start batch manually\ncart.beginBatch();\n\n// Multiple updates...\ncart.items.push({ id: 1, name: "Widget", price: 10 });\ncart.items.push({ id: 2, name: "Gadget", price: 20 });\ncart.total = 30;\n\n// Commit all changes as a single update\ncart.commitBatch();\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"-persiststorage-store-options",children:["\ud83d\udcbe ",(0,r.jsx)(n.code,{children:"persist(storage, store, options?)"})]}),"\n",(0,r.jsx)(n.p,{children:"Persists store state across page reloads using the specified storage mechanism."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"storage"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Storage"})}),(0,r.jsx)(n.td,{children:"Storage mechanism (localStorage, sessionStorage, or custom)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"store"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"Object"})," or ",(0,r.jsx)(n.code,{children:"Object[]"})]}),(0,r.jsx)(n.td,{children:"A store or array of stores to persist"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsx)(n.td,{children:"Optional configuration options"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options.key"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:'Key to use in storage (default: "jods-state")'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options.version"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"Schema version for migrations (default: 1)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options.migrate"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Function"})}),(0,r.jsx)(n.td,{children:"Migration function for version changes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options.partial"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"string[]"})," or ",(0,r.jsx)(n.code,{children:"Function"})]}),(0,r.jsx)(n.td,{children:"Properties to include or function to select properties"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options.exclude"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string[]"})}),(0,r.jsx)(n.td,{children:"Properties to exclude from persistence"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options.syncDebounce"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"Debounce interval for writes in ms (default: 100)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options.loadOnly"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:"Only load from storage, don't save changes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options.onError"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Function"})}),(0,r.jsx)(n.td,{children:"Error handler for storage/parsing errors"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," Cleanup function to stop persistence"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'import { store, persist } from "jods";\n\n// Create a store\nconst settings = store({\n  theme: "light",\n  fontSize: 16,\n  notifications: true,\n});\n\n// Basic persistence with localStorage\nconst cleanup = persist(localStorage, settings, {\n  key: "app-settings",\n});\n\n// Later, stop persistence\ncleanup();\n'})}),"\n",(0,r.jsx)(n.h4,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Selective Persistence:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'// Only persist specific properties\npersist(localStorage, settings, {\n  key: "app-settings",\n  partial: ["theme", "fontSize"],\n});\n\n// Exclude sensitive properties\npersist(localStorage, settings, {\n  key: "app-settings",\n  exclude: ["authToken", "personalData"],\n});\n\n// Dynamic property selection\npersist(localStorage, settings, {\n  key: "app-settings",\n  partial: (key, value) => {\n    // Only persist non-private properties\n    return !key.startsWith("private_");\n  },\n});\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Multiple Stores:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'const userStore = store({ name: "User", preferences: {} });\nconst appStore = store({ theme: "dark" });\n\n// Persist multiple stores under one key\npersist(localStorage, [userStore, appStore], {\n  key: "app-state",\n});\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Versioning and Migrations:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'persist(localStorage, settings, {\n  key: "app-settings",\n  version: 2, // Current schema version\n  migrate: (oldState, oldVersion) => {\n    // Convert from version 1 to version 2\n    if (oldVersion === 1) {\n      return {\n        ...oldState,\n        // Transform state for version 2\n        theme: oldState.theme || "system",\n        fontSize: oldState.textSize || 16, // renamed property\n      };\n    }\n    return oldState;\n  },\n});\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Async Storage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'const asyncStorage = {\n  getItem: async (key) => {\n    const value = await fetchFromAPI(key);\n    return value;\n  },\n  setItem: async (key, value) => {\n    await saveToAPI(key, value);\n  },\n  removeItem: async (key) => {\n    await deleteFromAPI(key);\n  },\n};\n\n// Persistence with async storage\npersist(asyncStorage, settings, {\n  key: "remote-settings",\n});\n'})}),"\n",(0,r.jsx)(n.h4,{id:"helper-functions",children:"Helper Functions"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"getPersisted(storage, key, options?)"})})}),"\n",(0,r.jsx)(n.p,{children:"Gets persisted data without affecting any store."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'import { getPersisted } from "jods";\n\n// Get persisted data\nconst savedSettings = getPersisted(localStorage, "app-settings");\nconsole.log(savedSettings); // { theme: "dark", fontSize: 16 }\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"clearPersisted(storage, key)"})})}),"\n",(0,r.jsx)(n.p,{children:"Clears persisted data for a specific key."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'import { clearPersisted } from "jods";\n\n// Clear persisted data\nclearPersisted(localStorage, "app-settings");\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"isPersisted(store)"})})}),"\n",(0,r.jsx)(n.p,{children:"Checks if a store is currently being persisted."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'import { isPersisted } from "jods";\n\n// Check if the store is persisted\nif (isPersisted(settings)) {\n  console.log("Settings are being persisted");\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"isPersistAvailable()"})})}),"\n",(0,r.jsx)(n.p,{children:"Checks if persistence is available in the current environment."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'import { isPersistAvailable } from "jods";\n\n// Check if persistence is available\nif (isPersistAvailable()) {\n  // Safe to use persistence\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["For more details on persistence options and patterns, see the ",(0,r.jsx)(n.a,{href:"/state-persistence",children:"State Persistence"})," page."]}),"\n",(0,r.jsx)(n.h2,{id:"-framework-integration",children:"\ud83d\udd0c Framework Integration"}),"\n",(0,r.jsx)(n.h3,{id:"\ufe0f-react",children:"\u269b\ufe0f React"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"useJods(store)"})})}),"\n",(0,r.jsx)(n.p,{children:"React hook for subscribing to a jods store."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"store"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsxs)(n.td,{children:["A jods store created with ",(0,r.jsx)(n.code,{children:"store()"})]})]})})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The current state of the store, updated reactively"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { useJods } from "jods/react";\nimport { store } from "jods";\n\n// Create a store\nconst counter = store({ count: 0 });\n\nfunction Counter() {\n  // Hook into the store\n  const state = useJods(counter);\n\n  return (\n    <div>\n      <p>Count: {state.count}</p>\n      <button onClick={() => state.count++}>Increment</button>\n    </div>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"usePersist(storage, store, options?)"})})}),"\n",(0,r.jsx)(n.p,{children:"React hook for persisting a store to storage."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"storage"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Storage"})}),(0,r.jsx)(n.td,{children:"Storage mechanism (localStorage, sessionStorage, or custom)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"store"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"Object"})," or ",(0,r.jsx)(n.code,{children:"Object[]"})]}),(0,r.jsx)(n.td,{children:"A store or array of stores to persist"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsxs)(n.td,{children:["Same options as ",(0,r.jsx)(n.code,{children:"persist()"})," function"]})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { useJods, usePersist } from "jods/react";\nimport { store } from "jods";\n\n// Create a store\nconst settings = store({\n  theme: "light",\n  fontSize: 16,\n});\n\nfunction SettingsComponent() {\n  // Use the store\n  const state = useJods(settings);\n\n  // Persist with localStorage\n  usePersist(localStorage, settings, {\n    key: "user-settings",\n  });\n\n  return (\n    <div>\n      <select\n        value={state.theme}\n        onChange={(e) => (state.theme = e.target.value)}\n      >\n        <option value="light">Light</option>\n        <option value="dark">Dark</option>\n      </select>\n    </div>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ufe0f-preact",children:"\u26a1\ufe0f Preact"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"useJods(store)"})})}),"\n",(0,r.jsx)(n.p,{children:"Preact hook for subscribing to a jods store."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"store"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsxs)(n.td,{children:["A jods store created with ",(0,r.jsx)(n.code,{children:"store()"})]})]})})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The current state of the store, updated reactively"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { useJods } from "jods/preact";\nimport { store } from "jods";\n\n// Create a store\nconst counter = store({ count: 0 });\n\nfunction Counter() {\n  // Hook into the store\n  const state = useJods(counter);\n\n  return (\n    <div>\n      <p>Count: {state.count}</p>\n      <button onClick={() => state.count++}>Increment</button>\n    </div>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"usePersist(storage, store, options?)"})})}),"\n",(0,r.jsx)(n.p,{children:"Preact hook for persisting a store to storage."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"storage"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Storage"})}),(0,r.jsx)(n.td,{children:"Storage mechanism (localStorage, sessionStorage, or custom)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"store"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"Object"})," or ",(0,r.jsx)(n.code,{children:"Object[]"})]}),(0,r.jsx)(n.td,{children:"A store or array of stores to persist"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsxs)(n.td,{children:["Same options as ",(0,r.jsx)(n.code,{children:"persist()"})," function"]})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { useJods, usePersist } from "jods/preact";\nimport { store } from "jods";\n\n// Create a store\nconst settings = store({\n  theme: "light",\n  fontSize: 16,\n});\n\nfunction SettingsComponent() {\n  // Use the store\n  const state = useJods(settings);\n\n  // Persist with localStorage\n  usePersist(localStorage, settings, {\n    key: "user-settings",\n  });\n\n  return (\n    <div>\n      <select\n        value={state.theme}\n        onChange={(e) => (state.theme = e.target.value)}\n      >\n        <option value="light">Light</option>\n        <option value="dark">Dark</option>\n      </select>\n    </div>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-remix",children:"\ud83d\udcbf Remix"}),"\n",(0,r.jsx)(n.p,{children:"jods provides first-class integration with Remix \ud83d\udcbf, replacing traditional loaders and actions with reactive stores."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"defineStore(options)"})})}),"\n",(0,r.jsx)(n.p,{children:"Creates a reactive store with server-side handlers and loaders."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsx)(n.td,{children:"Configuration options for the store"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options.name"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Unique name for the store (required)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options.schema"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ZodSchema"})}),(0,r.jsx)(n.td,{children:"Zod schema for type validation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options.defaults"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsx)(n.td,{children:"Default values for store properties"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options.handlers"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsx)(n.td,{children:"Form handler functions that process form submissions"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options.loader"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Function"})}),(0,r.jsx)(n.td,{children:"Async function that loads server data, similar to Remix loaders"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Define a store with server-side handlers\nimport { defineStore } from "jods/remix";\nimport { z } from "zod";\n\nexport const user = defineStore({\n  name: "user",\n  schema: z.object({\n    name: z.string(),\n    email: z.string().email(),\n  }),\n  loader: async () => {\n    // Load user data from database\n    return { name: "Burt Macklin", email: "burt.macklin@fbi.pawnee.city" };\n  },\n  handlers: {\n    async updateProfile({ current, form }) {\n      // Process form submission\n      return {\n        ...current,\n        name: form.get("name"),\n        email: form.get("email"),\n      };\n    },\n  },\n});\n\n// In your component\nimport { useJodsStore, useJodsForm } from "jods/remix";\n\nfunction ProfileComponent() {\n  const userData = useJodsStore(user);\n  const form = useJodsForm(user.actions.updateProfile);\n\n  return (\n    <form {...form.props}>\n      <input name="name" defaultValue={userData.name} />\n      <button type="submit">Update</button>\n    </form>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"createCookieStorage(options)"})})}),"\n",(0,r.jsx)(n.p,{children:"Creates a persistence storage adapter using Remix cookies for server-side persistence."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsx)(n.td,{children:"Cookie configuration options"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"options.cookie"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Object"})}),(0,r.jsx)(n.td,{children:"Remix cookie options (name, secrets, etc.)"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { createCookieStorage } from "jods/remix";\nimport { json, redirect } from "@remix-run/node";\nimport { Form, useLoaderData } from "@remix-run/react";\nimport { store } from "jods";\nimport { useEffect } from "react";\nimport { useJods, usePersist } from "jods/react";\n\n// Create a cookie-based storage adapter\nconst cookieStorage = createCookieStorage({\n  cookie: {\n    name: "app_settings",\n    secrets: ["your-secret-key"],\n    sameSite: "lax",\n    path: "/",\n    maxAge: 60 * 60 * 24 * 7, // 1 week\n  },\n});\n\n// Create your store outside component (shared between requests)\nconst settingsStore = store({\n  theme: "light",\n  fontSize: "medium",\n});\n\n// Server-side loader (runs on each request)\nexport async function loader({ request }) {\n  // Load persisted data from cookie\n  const persistedData = await cookieStorage.getItem("user-settings");\n\n  // Create a fresh copy for this request\n  const settings = { ...settingsStore };\n\n  if (persistedData) {\n    try {\n      const parsedData = JSON.parse(persistedData);\n      // Update the settings with cookie data\n      Object.assign(settings, parsedData);\n    } catch (e) {\n      console.error("Failed to parse persisted data", e);\n    }\n  }\n\n  // Return settings to the client for hydration\n  return json({ settings });\n}\n\n// Server-side action (runs on form submissions)\nexport async function action({ request }) {\n  const formData = await request.formData();\n  const theme = formData.get("theme");\n  const fontSize = formData.get("fontSize");\n\n  // Create response\n  const response = redirect("/settings");\n  const headers = new Headers(response.headers);\n\n  // Save to cookie with proper headers\n  await cookieStorage.setItem(\n    "user-settings",\n    JSON.stringify({\n      theme,\n      fontSize,\n    }),\n    { headers }\n  );\n\n  // Return response with cookie headers\n  return new Response(null, {\n    status: response.status,\n    headers,\n  });\n}\n\n// Client-side component\nexport default function SettingsPage() {\n  const { settings } = useLoaderData();\n\n  // Create client-side store\n  const clientStore = store({\n    theme: "light",\n    fontSize: "medium",\n  });\n\n  // First hydrate from server data\n  useEffect(() => {\n    Object.assign(clientStore, settings);\n  }, [settings]);\n\n  // Then set up client-side persistence (browser storage)\n  usePersist(typeof window !== "undefined" ? localStorage : null, clientStore, {\n    key: "user-settings",\n  });\n\n  // Use the store in UI\n  const state = useJods(clientStore);\n\n  return (\n    <div>\n      <h1>Settings</h1>\n      <Form method="post">\n        <label>\n          Theme:\n          <select name="theme" defaultValue={state.theme}>\n            <option value="light">Light</option>\n            <option value="dark">Dark</option>\n          </select>\n        </label>\n\n        <label>\n          Font Size:\n          <select name="fontSize" defaultValue={state.fontSize}>\n            <option value="small">Small</option>\n            <option value="medium">Medium</option>\n            <option value="large">Large</option>\n          </select>\n        </label>\n\n        <button type="submit">Save</button>\n      </Form>\n    </div>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"This example demonstrates:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Creating a cookie storage adapter for server-side persistence"}),"\n",(0,r.jsx)(n.li,{children:"Loading settings from cookies in the loader"}),"\n",(0,r.jsx)(n.li,{children:"Saving settings to cookies in the action with proper header handling"}),"\n",(0,r.jsx)(n.li,{children:"Hydrating the client store with server data"}),"\n",(0,r.jsxs)(n.li,{children:["Setting up client-side persistence with ",(0,r.jsx)(n.code,{children:"usePersist"})]}),"\n",(0,r.jsxs)(n.li,{children:["Using the store in a React component with ",(0,r.jsx)(n.code,{children:"useJods"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["For comprehensive documentation on Remix integration, see the ",(0,r.jsx)(n.a,{href:"/remix",children:"Remix Integration Guide"})," \ud83d\udcbf."]}),"\n",(0,r.jsx)(n.h3,{id:"store",children:"Store"}),"\n",(0,r.jsx)(n.p,{children:"Creates a reactive store that can be directly mutated."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'import { store } from "jods";\n\nconst user = store({\n  firstName: "Burt",\n  lastName: "Macklin",\n});\n\n// Direct property access & mutation\nconsole.log(user.firstName); // "Burt"\nuser.firstName = "Agent";\n'})}),"\n",(0,r.jsx)(n.h4,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,r.jsx)(n.p,{children:"The store uses a signal-based implementation for fine-grained reactivity:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Each property in the store is backed by a signal (read/write pair)"}),"\n",(0,r.jsx)(n.li,{children:"Subscribers only re-run when properties they actually access change"}),"\n",(0,r.jsx)(n.li,{children:"Property dependencies are tracked automatically when subscribers run"}),"\n",(0,r.jsx)(n.li,{children:"Updates only notify the subscribers that depend on the changed properties"}),"\n",(0,r.jsx)(n.li,{children:"Adding new properties dynamically is fully supported"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"subscription-behavior",children:"Subscription Behavior"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'// Subscribe to changes in the store\nconst unsubscribe = store.subscribe((state) => {\n  // This function runs once immediately when subscribed\n  // to track which properties you access\n  console.log("Current count:", state.count);\n\n  // Then it will run again only when those properties change\n});\n\n// Later, stop receiving updates\nunsubscribe();\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"subscribe"})," function automatically:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Tracks which properties are accessed during the subscriber function"}),"\n",(0,r.jsx)(n.li,{children:"Only notifies your subscriber when those specific properties change"}),"\n",(0,r.jsx)(n.li,{children:"Re-tracks dependencies each time your function runs (for dynamic dependencies)"}),"\n",(0,r.jsx)(n.li,{children:"Treats subscribers that don't access any properties as global subscribers"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["When calling ",(0,r.jsx)(n.code,{children:"unsubscribe()"}),":"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"The subscriber is immediately removed from all internal tracking maps"}),"\n",(0,r.jsx)(n.li,{children:"All signal-level subscriptions are properly cleaned up"}),"\n",(0,r.jsx)(n.li,{children:"The subscriber will never be called again for any state changes"}),"\n",(0,r.jsx)(n.li,{children:"All references are removed, preventing memory leaks"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["For more details on the reactivity system, see the ",(0,r.jsx)(n.a,{href:"/fine-grained-reactivity",children:"Fine-grained Reactivity"})," page."]}),"\n",(0,r.jsx)(n.h4,{id:"api",children:"API"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function store<T extends Record<string, any>>(initialState: T): T & Store<T>;\n\ninterface Store<T> {\n  getState(): T;\n  setState(partial: Partial<T>): void;\n  subscribe(subscriber: (state: T) => void): () => void;\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"methods",children:"Methods"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Method"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"getState()"})}),(0,r.jsx)(n.td,{children:"Returns the current state object"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"setState(partial)"})}),(0,r.jsx)(n.td,{children:"Updates multiple properties at once (direct property mutation is preferred)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"subscribe(fn)"})}),(0,r.jsx)(n.td,{children:"Subscribes to state changes with automatic dependency tracking"})]})]})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},3774:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var t=s(6672);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);