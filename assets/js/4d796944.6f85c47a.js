"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7904],{3070:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"jodsSidebar":[{"type":"link","label":"\u2728 About jods","href":"/jods/about","docId":"about","unlisted":false},{"type":"link","label":"\ud83d\ude80 Introduction","href":"/jods/intro","docId":"intro","unlisted":false},{"type":"link","label":"\ud83d\udcda API Reference","href":"/jods/api-reference","docId":"api-reference","unlisted":false},{"type":"link","label":"\ud83d\udca1 Examples","href":"/jods/examples","docId":"examples","unlisted":false},{"type":"link","label":"\ud83d\udd70\ufe0f Time-Travel Debugging","href":"/jods/time-travel-debugging","docId":"time-travel-debugging","unlisted":false},{"type":"link","label":"\ud83d\udd70\ufe0f Time-Travel Debugging (Old)","href":"/jods/time-travel-debugging-old","docId":"time-travel-debugging-old","unlisted":false},{"type":"link","label":"\ud83d\udcbe State Persistence","href":"/jods/state-persistence","docId":"state-persistence","unlisted":false},{"type":"link","label":"\ud83d\uddc4\ufe0f Storage Adapters","href":"/jods/storage-adapters","docId":"storage-adapters","unlisted":false},{"type":"link","label":"\ud83e\uddec Fine-Grained Reactivity","href":"/jods/fine-grained-reactivity","docId":"fine-grained-reactivity","unlisted":false},{"type":"link","label":"\ud83d\udd0b Batch Updates","href":"/jods/batch","docId":"batch","unlisted":false},{"type":"category","label":"\ud83d\udd04 sync","collapsed":false,"items":[{"type":"link","label":"\ud83d\udd0c Framework Integration","href":"/jods/sync/framework-integration","docId":"sync/framework-integration","unlisted":false},{"type":"link","label":"\ud83d\udee0\ufe0f Framework Usage","href":"/jods/sync/framework-usage","docId":"sync/framework-usage","unlisted":false},{"type":"link","label":"\ud83d\uddbc\ufe0f Framework Examples","href":"/jods/sync/framework-examples","docId":"sync/framework-examples","unlisted":false},{"type":"link","label":"\ud83d\udcda API Reference","href":"/jods/sync/api-reference","docId":"sync/api-reference","unlisted":false}],"collapsible":true},{"type":"link","label":"\ud83d\udd0c Framework Integrations","href":"/jods/guides/framework-integrations","docId":"guides/framework-integrations","unlisted":false},{"type":"category","label":"\ud83d\udcbf Remix Integration","collapsed":false,"items":[{"type":"link","label":"\ud83c\udf10 Overview","href":"/jods/remix/","docId":"remix/index","unlisted":false},{"type":"link","label":"\ud83e\ude9d useJods - Unified Hook","href":"/jods/remix/useJods","docId":"remix/useJods","unlisted":false},{"type":"link","label":"\ud83d\udd04 Migration Guide","href":"/jods/remix/migration-guide","docId":"remix/migration-guide","unlisted":false},{"type":"link","label":"\ud83e\udde9 Common Patterns","href":"/jods/remix/common-patterns","docId":"remix/common-patterns","unlisted":false},{"type":"link","label":"\u26a1 Performance Tips","href":"/jods/remix/performance-tips","docId":"remix/performance-tips","unlisted":false},{"type":"link","label":"\ud83d\udcda API Reference","href":"/jods/remix/api-reference","docId":"remix/api-reference","unlisted":false}],"collapsible":true}]},"docs":{"about":{"id":"about","title":"About jods","description":"History and motivation behind the jods library","sidebar":"jodsSidebar"},"api-reference":{"id":"api-reference","title":"\ud83d\udcda \ud83d\udc3f\ufe0f \ud83e\udd86 API Reference","description":"jods provides a small but powerful API for state management.","sidebar":"jodsSidebar"},"batch":{"id":"batch","title":"\ud83d\udd0b Batch Updates","description":"Batching allows you to group multiple state updates together, deferring notifications to subscribers until all changes are complete. This is especially useful for complex state transitions that should be treated as a single atomic update.","sidebar":"jodsSidebar"},"dynamics-system":{"id":"dynamics-system","title":"What is a Dynamics System?","description":"Understanding jods as a JavaScript Object Dynamics System"},"emoji-standards":{"id":"emoji-standards","title":"\ud83c\udfad Emoji Standards Guide","description":"This document outlines the standardized emoji usage across jods documentation and code. Consistent emoji usage helps maintain a cohesive visual language and improves recognition of concepts across different parts of the codebase and documentation."},"examples":{"id":"examples","title":"\ud83d\udcda Examples \ud83d\udca1 \ud83d\udc3f\ufe0f \ud83e\udd86","description":"Here are some practical examples showing how to use jods in different contexts.","sidebar":"jodsSidebar"},"fine-grained-reactivity":{"id":"fine-grained-reactivity","title":"\ud83e\uddec Fine-grained Reactivity","description":"JODS uses a signal-based reactive system to provide efficient, fine-grained updates to subscribers. This optimization ensures that subscribers are only notified when the specific data they depend on changes.","sidebar":"jodsSidebar"},"guides/complex-state-patterns":{"id":"guides/complex-state-patterns","title":"Complex State Patterns","description":"Best practices for managing complex state structures in jods"},"guides/framework-integrations":{"id":"guides/framework-integrations","title":"Framework Integrations Guide","description":"This guide documents how jods integrates with popular frontend frameworks and provides best practices for using these integrations.","sidebar":"jodsSidebar"},"guides/performance-best-practices":{"id":"guides/performance-best-practices","title":"Performance Best Practices","description":"Optimize your jods implementation for maximum performance"},"guides/state-update-flow":{"id":"guides/state-update-flow","title":"State Update Flow","description":"Visual guide to understanding how jods handles state updates"},"intro":{"id":"intro","title":"\ud83d\udc3f\ufe0f \ud83e\udd86 Introduction to jods","description":"\\"Got state to track? Just jods it down\\"","sidebar":"jodsSidebar"},"maintainers-guide":{"id":"maintainers-guide","title":"Maintainer\'s Guide","description":"This guide outlines all the places that need to be updated when adding a new feature to jods."},"philosophy/remix-philosophy":{"id":"philosophy/remix-philosophy","title":"The Philosophy Behind Remixing Remix","description":"How jods brings Rails-like conventions to Remix for a more seamless full-stack experience"},"remix/api-reference":{"id":"remix/api-reference","title":"API Reference","description":"Complete API documentation for jods/remix","sidebar":"jodsSidebar"},"remix/common-patterns":{"id":"remix/common-patterns","title":"Common Patterns","description":"Best practices and common patterns for using jods with Remix","sidebar":"jodsSidebar"},"remix/index":{"id":"remix/index","title":"Remix Integration Overview","description":"Complete guide to using jods with Remix","sidebar":"jodsSidebar"},"remix/migration-guide":{"id":"remix/migration-guide","title":"Migrating to jods","description":"Step-by-step guide to migrate from Remix loaders/actions to jods","sidebar":"jodsSidebar"},"remix/performance-tips":{"id":"remix/performance-tips","title":"Performance Tips","description":"Optimize your Remix application with jods","sidebar":"jodsSidebar"},"remix/useJods":{"id":"remix/useJods","title":"useJods - The Unified Hook","description":"Combine store data access and form handlers in one elegant hook","sidebar":"jodsSidebar"},"state-persistence":{"id":"state-persistence","title":"\ud83d\udcbe State Persistence","description":"jods includes built-in persistence capabilities, allowing state to be saved and restored across page reloads, browser sessions, or even different devices.","sidebar":"jodsSidebar"},"storage-adapters":{"id":"storage-adapters","title":"\ud83d\uddc4\ufe0f Storage Adapters","description":"jods persistence works with any storage mechanism that implements the standard storage interface. This document covers the various storage adapters you can use with the persist() API.","sidebar":"jodsSidebar"},"sync/api-reference":{"id":"sync/api-reference","title":"API Reference","description":"Complete reference for the jods sync API","sidebar":"jodsSidebar"},"sync/framework-examples":{"id":"sync/framework-examples","title":"Framework Integration Examples","description":"This page provides practical, ready-to-use examples of the sync API with different frameworks. Each example demonstrates a common use case that you can adapt for your own applications.","sidebar":"jodsSidebar"},"sync/framework-integration":{"id":"sync/framework-integration","title":"Framework Integration","description":"The sync API is designed to work seamlessly with all jods framework integrations. This page shows how to integrate the sync API with React, Preact, and Remix frameworks.","sidebar":"jodsSidebar"},"sync/framework-usage":{"id":"sync/framework-usage","title":"Framework Integration","description":"Using the sync API with React, Preact, and Remix","sidebar":"jodsSidebar"},"time-travel-debugging":{"id":"time-travel-debugging","title":"\ud83d\udd70\ufe0f Time-Travel Debugging with jods","description":"jods provides a powerful time-travel debugging capability through the history() function, allowing you to track changes to your store and move back and forth through its state history.","sidebar":"jodsSidebar"},"time-travel-debugging-old":{"id":"time-travel-debugging-old","title":"Time-Travel Debugging (Old Version)","description":"jods includes powerful time-travel debugging capabilities that allow you to track state changes over time and jump back to previous states. This feature is invaluable for debugging complex state changes and understanding how your application\'s state evolves.","sidebar":"jodsSidebar"},"zod-integration":{"id":"zod-integration","title":"Zod Integration with jods","description":"jods provides a lightweight integration with Zod, the TypeScript-first schema validation library. This enables you to validate your store data with powerful schemas."}}}}')}}]);