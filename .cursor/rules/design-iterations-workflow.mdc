---
description: Comprehensive guidelines for the design iterations workflow for UI components
globs: ["**/*.{tsx,jsx,js,ts}", "**/*.css", "**/*.md"]
alwaysApply: false
---
# Design Iterations Workflow

## <critical> Process Flow Sequence - Critical </critical>

The design iterations system requires **three separate processes** running in the correct sequence:

1. **Dev Server (Process 1)** - Must be running first
   ```bash
   cd docs
   pnpm dev
   # Verify server is running by visiting http://localhost:3000
   ```

2. **Component Changes (Process 2)** - Must complete and rebuild
   - Make changes to component files (TSX/JSX and CSS)
   - Wait 45-60 seconds for DocuSaurus to fully rebuild
   - Manually verify in browser that changes are visible

3. **Screenshot Capture (Process 3)** - Must wait for Process 2 to complete
   ```bash
   # Only run after confirming changes are visible in browser
   cd docs
   pnpm design-iterations:count-1 --target="03-try-jods-section" --prompt="..." --skip-other-sections
   ```

**COMMON ERRORS:**
- Using the wrong directory: Always `cd docs` first
- Race condition: Running screenshot capture before changes are fully rebuilt
- Background process issues: Not waiting for process completion
- Port conflicts: Multiple dev servers attempting to run

## <critical> Correct Command Sequence </critical>

```bash
# Terminal 1: Start dev server and leave running
cd docs
pnpm dev
# Wait for full initialization, then visit http://localhost:3000

# Terminal 2 (or Cursor terminal): Make component changes
# Edit docs/src/components/YourComponent.tsx
# Edit docs/src/components/YourComponent.module.css

# WAIT 45-60 seconds, then verify changes in browser
# Only after changes are visible:

# Terminal 2: Run single iteration screenshot capture
cd docs
pnpm design-iterations:count-1 --target="03-try-jods-section" --prompt="Your design prompt" --skip-other-sections

# Verify screenshot was captured:
open docs/static/screenshots/unified/03-try-jods-section-light-{timestamp}.png

# Wait for screenshot to complete before making next design change
```

## <critical> Common Issues & Solutions </critical>

1. **Server Already Running**
   - Error: `Something is already running on port 3000`
   - Solution: 
     - Say Yes to use a different port, OR
     - Kill existing process: `pkill -f docusaurus`
   - **Server Detection Issue**: If the script says "Docs server not running" but it is running:
     - Try manually verifying with `curl http://localhost:3000` to check connectivity
     - If the script hangs on server detection despite server running, proceed with the workflow. The screenshot will still be captured correctly if the server is accessible.

2. **Missing Script**
   - Error: `ERR_PNPM_NO_SCRIPT_OR_SERVER Missing script start`
   - Solution: You're in wrong directory, run `cd docs` first

3. **Not Finding Component**
   - Error: Component not found or blank screenshots
   - Solution: 
     - Use correct numbered format for target: `03-try-jods-section` (not just "try-jods-section")
     - Verify data-testid matches in component: `data-testid="03-try-jods-section"`

4. **Background Process Issues**
   - Error: Command appears to hang or is interrupted
   - Solution:
     - Use separate terminals for dev server and design iteration commands
     - Don't background processes that need to complete sequentially
     - Wait for each process to fully complete before starting next

5. **Changes Not Showing**
   - Issue: Browser doesn't reflect component changes
   - Solution:
     - Wait longer (60+ seconds) for DocuSaurus to rebuild
     - Force refresh browser with Ctrl+Shift+R
     - Check console for build errors
     - Restart dev server if needed

## <required> Waiting Periods & Verification </required>

**NEVER skip these waiting/verification steps:**

1. **After starting dev server:** Wait until the terminal shows "Compiled successfully" and you can load http://localhost:3000

2. **After making component changes:** Wait 45-60 seconds minimum for DocuSaurus to rebuild, then manually verify in browser that changes are visible

3. **After capturing screenshot:** Verify the screenshot was created and shows your new design:
   ```bash
   open docs/static/screenshots/unified/03-try-jods-section-light-{timestamp}.png
   ```

4. **Between iterations:** Complete the entire sequence for one iteration before starting the next:
   - Make component changes
   - Wait for rebuild (45-60 seconds)
   - Verify in browser
   - Capture screenshot
   - Verify screenshot shows new design

## <required> Component Testing </required>

Each component should have a proper `data-testid` attribute that matches the target name:

```jsx
<section
  className={styles.sectionContainer}
  id="try-jods-live"
  data-testid="03-try-jods-section"
>
```

**Available Component Names:**
- `01-hero-section` (NOT just "hero-section")
- `02-features-section` (NOT just "features-section")
- `03-try-jods-section` (NOT just "try-jods-section")
- `04-framework-section-react` (NOT just "framework-section-react")
- `04-framework-section-remix` (NOT just "framework-section-remix")
- `05-remix-section` (NOT just "remix-section")
- `06-compare-section` (NOT just "compare-section")
- `07-footer-section` (NOT just "footer-section")

## Design Iteration Commands

```bash
# Create a single design iteration
pnpm design-iterations:count-1 --target="03-try-jods-section" --prompt="Your design description" --skip-other-sections

# Check status of design iterations
pnpm design-iterations:status

# Apply a specific design iteration
pnpm design-iterations:apply --iteration=2 --target="03-try-jods-section"

# Clean up iteration artifacts (ONLY when explicitly requested)
pnpm design-iterations:cleanup
```

## <critical> Working with Historical Design Iterations </critical>

After you've created multiple design iterations, you'll need to reference them by their timestamps and be able to view, compare, and potentially apply specific iterations. Here's how to work with historical iterations:

### Viewing Available Iterations

First, check all available iterations:

```bash
# View all iterations and their timestamps
cd docs
pnpm design-iterations:status
```

This will show a list of iterations with their timestamps (format: YYYYMMDDTHHMMSS).

### Accessing Iteration Screenshots by Timestamp

Once you have the timestamp for a specific iteration, you can view its screenshots:

```bash
# Light theme screenshot
open docs/static/screenshots/unified/03-try-jods-section-light-20250507T121424.png

# Dark theme screenshot (if available)
open docs/static/screenshots/unified/03-try-jods-section-dark-20250507T121424.png

# Find all screenshots for a specific iteration by timestamp
find docs/static/screenshots -name "*20250507T121424*"
```

### Viewing Iteration Diffs

To understand what code changes were made in a specific iteration:

```bash
# View the diff of code changes from a specific iteration
cat docs/temp/possible-diffs/03-try-jods-section-20250507T121424.diff

# To find all available diffs
find docs/temp -name "*diff*" | grep "03-try-jods-section"
```

Diffs contain the exact code changes between the base version and the iteration, showing you precisely what was modified in the component files.

### Reviewing Iteration Feedback and Metadata

Each iteration has associated metadata and feedback templates:

```bash
# View feedback template for a specific iteration
open docs/temp/design-iterations/iteration-N/feedback-template.md

# View metadata for a specific iteration
cat docs/temp/design-iterations/iteration-N/metadata.json
```

### Applying a Specific Historical Iteration

To apply a specific historical iteration by its iteration number:

```bash
# First, ensure the iteration is approved in its metadata.json
# Then apply it:
pnpm design-iterations:apply --iteration=N --target="03-try-jods-section"
```

### Comparing Multiple Iterations

To compare multiple iterations visually:

```bash
# Open multiple screenshots side by side
open docs/static/screenshots/unified/03-try-jods-section-light-20250507T121424.png docs/static/screenshots/unified/03-try-jods-section-light-20250507T123056.png

# Compare diffs from different iterations (manual inspection)
cat docs/temp/possible-diffs/03-try-jods-section-20250507T121424.diff
cat docs/temp/possible-diffs/03-try-jods-section-20250507T123056.diff
```

### Searching for Iterations by Component or Timestamp

Find all iterations for a specific component or timestamp pattern:

```bash
# Find all screenshots for a specific component
find docs/static/screenshots -name "*03-try-jods-section*"

# Find all iterations from a specific date
find docs/static/screenshots -name "*20250507*"

# Find all diffs for a specific component
find docs/temp -name "*diff*" | grep "03-try-jods-section"
```

### Documenting Iteration History

When working through multiple iterations, document the timestamp and key features of each in your notes:

```markdown
## Design Iteration History

- Iteration 1 (20250507T121424): Initial notebook design with tabs
- Iteration 2 (20250507T123056): Updated with gradient backgrounds
- Iteration 3 (20250507T125201): Refined tab styling and animations
- Iteration 4 (20250507T131045): Final version with dark mode improvements

Selected iteration: 3 (20250507T125201)
```

This approach creates a clear record of your design process and makes it easy to reference specific iterations.

## <critical> Troubleshooting Guide </critical>

**Screenshot not showing changes:**
- The most common issue is a race condition - the screenshot was taken before changes fully rebuilt
- Solution: Wait longer between making changes and running screenshot command (60+ seconds)
- Manually verify in browser before running screenshot command

**Command hangs indefinitely:**
- Process is waiting for server to be available
- Solution: Start the dev server in a separate terminal first with `cd docs && pnpm dev`
- Kill hanging process with Ctrl+C and try again after server is fully running

**Multiple iterations with same content:**
- Changes weren't rebuilt between iterations
- Solution: Only run one iteration at a time, verify changes in browser before each capture

**Process runs but no screenshots are created:**
- Check if there are errors in the terminal output
- Verify the target component name is correct
- Check data-testid attribute in component matches target name

## <required> Multiple Iterations Workflow </required>

For multiple iterations, repeat this sequence for each one:

1. **Edit component files** - Make your design changes
2. **Wait for rebuild** - Allow 45-60 seconds minimum
3. **Verify in browser** - Confirm your design changes are visible
4. **Capture ONE iteration** - Run the screenshot command
5. **Verify screenshot** - Open and confirm the screenshot shows your new design
6. **Document changes** - Update the feedback template with design notes
7. **Make new changes** - Create a different design for the next iteration
8. **Repeat steps 2-7** - Follow the same sequence for each iteration

**NEVER run `count-5` directly** (this will create multiple iterations without proper verification between each)

## <required> Multi-State Component Capture </required>

When designing components with multiple states (tabs, dropdowns, toggles, etc.):

1. **Capture each important state** with a separate screenshot iteration:
   ```bash
   # First capture the default/initial state
   pnpm design-iterations:count-1 --target="03-try-jods-section" --prompt="Notebook design - Input tab state" --skip-other-sections
   
   # Then modify the component to show a different state (e.g., a different tab)
   # Edit the component to set a different default state:
   # const [activePanel, setActivePanel] = useState("code");  // Change from "input" to "code"
   
   # Wait for rebuild, verify in browser, then capture the next state
   pnpm design-iterations:count-1 --target="03-try-jods-section" --prompt="Notebook design - Code tab state" --skip-other-sections
   
   # Repeat for each important state
   ```

2. **Document each state** in the feedback template:
   ```markdown
   # Notebook Design - Multiple States
   
   ## States Captured:
   - Input tab: 03-try-jods-section-light-20250507T121055-input.png
   - Code tab: 03-try-jods-section-light-20250507T121115-code.png
   - Output tab: 03-try-jods-section-light-20250507T121135-output.png
   
   Each tab shows a focused interface optimized for that specific function.
   ```

3. **Use descriptive prompts** that clearly identify the state being captured

4. **Consider adding identifiers** in your prompt names to distinguish different states, e.g., "input-tab-view", "code-tab-view"

## <required> Feedback Templates & Metadata </required>

To ensure proper tracking of multiple design iterations:

1. **Each iteration gets its own artifacts**:
   - Each timestamp should have its own screenshot files, diff files, and feedback template
   - Never modify a previous iteration's artifacts

2. **Access feedback templates** for specific iterations:
   ```bash
   # Edit feedback for a specific iteration (using timestamp)
   open docs/temp/design-iterations/iteration-1/feedback-template.md
   ```

3. **Metadata schema**:
   ```json
   {
     "iteration": 1,
     "timestamp": "20250507T121055",
     "target": "03-try-jods-section",
     "prompt": "Notebook design with tabbed interface",
     "screenshots": [
       "03-try-jods-section-light-20250507T121055.png",
       "03-try-jods-section-dark-20250507T121055.png"
     ],
     "diff_path": "docs/temp/possible-diffs/03-try-jods-section-20250507T121055.diff",
     "status": "pending review"
   }
   ```

4. **If templates are being overwritten**:
   - Create manual copies with the timestamp included in the filename
   - Report the issue in the project's issue tracker with details about what was overwritten

## <required> End of Iteration Run: Review and Next Steps </required>

After completing a design iteration run, follow these steps to properly review and document your work:

1. **Review screenshots immediately**:
   ```bash
   # Open the most recent screenshot
   open docs/static/screenshots/unified/03-try-jods-section-light-<timestamp>.png
   ```

2. **Document the timestamp in your notes** for future reference:
   ```
   Iteration 3 completed at timestamp: 20250507T131045
   ```

3. **Review the code changes in the diff file**:
   ```bash
   # View the diff for the latest iteration
   cat docs/temp/possible-diffs/03-try-jods-section-<timestamp>.diff
   ```

4. **Update the feedback template with your observations**:
   ```bash
   # Open the feedback template
   open docs/temp/design-iterations/iteration-N/feedback-template.md
   ```

5. **Before starting a new iteration, document what you learned** and what changes you plan to make next.

6. **If this is your final iteration:**
   - Decide which iteration to apply based on your reviews
   - Mark it as "approved" in the metadata
   - Apply the chosen iteration using the apply command

Remember that each timestamp uniquely identifies a design snapshot, making it easy to refer back to specific versions of your component design. 