---
description: Guidelines for using the design iterations workflow for UI components
globs: ["**/*.{tsx,jsx,js,ts}", "**/*.css", "**/*.md"]
alwaysApply: false
---
# Design Iterations System

The Design Iterations system is a powerful workflow that combines Playwright screenshots with AI assistance to rapidly evolve UI components through multiple iterations.

## Quick Start

```bash
# Generate design iterations for a specific target only
pnpm docs:design-iterations:count-5 --target="try-jods-section" --prompt="Reimagine with bold visual hierarchy" --skip-other-sections
```

## Important: Component Code Updates Required

**CRITICAL**: For each design iteration, you MUST modify the component code BEFORE taking screenshots:

1. **Step 1: Edit the component code directly** - Before generating the screenshot for each iteration, modify the component's TSX/JSX and CSS code according to the design prompt
2. **Step 2: Wait for changes to apply** - Allow sufficient time (~5-10 seconds) for React to re-render with the new changes
3. **Step 3: Then run the screenshot command** - Each iteration should capture a visually distinct design

Example workflow:
```bash
# First modify the component code (edit src/components/InteractiveDemo.tsx)
# After saving changes, wait 5-10 seconds, then run:
pnpm docs:design-iterations:count-1 --target="try-jods-section" --skip-other-sections

# Then modify the component code differently
# After saving changes, wait 5-10 seconds, then run:
pnpm docs:design-iterations:count-1 --target="try-jods-section" --skip-other-sections

# Repeat for each unique design iteration
```

## Important: Component Name Formats

You can use either the simple name or the full name with numeric prefix:

```bash
# These are equivalent:
pnpm docs:design-iterations:count-5 --target="try-jods-section" --skip-other-sections
pnpm docs:design-iterations:count-5 --target="03-try-jods-section" --skip-other-sections
```

Available component names:
- `hero-section` or `01-hero-section`
- `features-section` or `02-features-section`
- `try-jods-section` or `03-try-jods-section`
- `framework-section-react` or `04-framework-section-react`
- `framework-section-remix` or `04-framework-section-remix`
- `remix-section` or `05-remix-section`
- `compare-section` or `06-compare-section`
- `footer-section` or `07-footer-section`

## Important: Using --skip-other-sections Flag

The `--skip-other-sections` flag is **crucial** when you want to focus on a single component without affecting or capturing other sections:

```bash
# CORRECT: Focus ONLY on the specified target
pnpm docs:design-iterations:count-5 --target="try-jods-section" --skip-other-sections

# INCORRECT: Will generate screenshots for ALL sections
pnpm docs:design-iterations:count-5 --target="try-jods-section"
```

This is essential to avoid the workflow generating unnecessary files for sections you're not changing.

## AI-Driven Workflow

When a user asks about design iterations, you should:

1. **Understand their target component** and where the code is located:
   - `try-jods-section` - Interactive demo section → `docs/src/components/InteractiveDemo.tsx`
   - `hero-section` - Main hero section on homepage → `docs/src/components/HeroSection.tsx`
   - `features-section` - Features grid on homepage → `docs/src/components/FeaturesSection.tsx`
   - `framework-section-react` - React framework comparison → `docs/src/components/FrameworkSection.tsx`
   - `framework-section-remix` - Remix framework section → `docs/src/components/FrameworkSectionRemix.tsx`
   - `remix-section` - Remix integration section → `docs/src/components/RemixSection.tsx`
   - `compare-section` - Library comparison section → `docs/src/components/CompareSection.tsx`
   - `footer-section` - Footer section → `docs/src/components/FooterSection.tsx`

2. **First modify the component code** based on design goals:
   - Edit the component's TSX/JSX file to change the structure/layout
   - Update CSS styles to change the visual appearance
   - Implement specific changes to address spacing issues, visual balance, etc.
   - Save changes and wait for React to re-render (5-10 seconds)

3. **Then capture the iteration screenshot** with:
   ```bash
   # Capture just one iteration after code modifications
   pnpm docs:design-iterations:count-1 --target="try-jods-section" --prompt="detailed design direction" --skip-other-sections
   ```

4. **Repeat for each unique design** (usually 3-5 iterations):
   - Make different code changes for each iteration
   - Capture screenshots after each change
   - Track iteration numbers and timestamps

5. **Run these commands for managing iterations**:
   ```bash
   # Check status of iterations
   pnpm docs:design-iterations:status
   
   # Apply the chosen design
   pnpm docs:design-iterations:apply --iteration=N --target="try-jods-section"
   
   # Clean up design artifacts when done
   pnpm docs:design-iterations:cleanup
   ```

## Expected Artifacts

Each design iteration generates these artifacts:

1. **Screenshots in two places**:
   - Primary: `docs/static/screenshots/unified/03-try-jods-section-{light|dark}-{timestamp}.png`
   - Backup: `docs/temp/design-iterations/iteration-N/screenshots/`

2. **Debug HTML** (for inspection):
   - `docs/static/debug/03-try-jods-section-{light|dark}-debug.html`

3. **Diff files** (for tracking changes):
   - `docs/temp/design-iterations/iteration-N/diff.patch`
   - `docs/temp/possible-diffs/03-try-jods-section-{timestamp}.diff`

4. **Documentation**:
   - `docs/temp/design-iterations/iteration-N/feedback-template.md`
   - `docs/temp/design-iterations/iteration-N/metadata.json`

## Best Practices

1. **Modify component code BEFORE each screenshot** - This is crucial
2. **Wait 5-10 seconds after code changes** before running the screenshot command
3. **Use `count-1` for each iteration** rather than generating all at once
4. **Avoid disrupting the development server** between iterations
5. **Always use the `--skip-other-sections` flag**
6. **Use simple component names** without number prefixes (e.g., `try-jods-section`)
7. **Document your changes** in the feedback templates
8. **Apply chosen designs** with `docs:design-iterations:apply`
9. **Clean up** with `docs:design-iterations:cleanup` when finished

## Common Issues

- **Identical screenshots**: Did you modify the component code before capturing?
- **No visual changes**: Did you wait long enough for React to re-render?
- **Too many screenshots**: Make sure to use `--skip-other-sections`
- **Component not found**: Check the component name - use simple names without numeric prefixes
- **Missing screenshots**: Ensure the docs site is running with `pnpm start`
- **Apply errors**: Check for uncommitted changes with `git status`

## DocuSaurus Documentation

For more information on the design iterations workflow, see the [official documentation](https://docs.jods.io/design-iterations/workflow):

- **Component Structure**: Each component has a structured naming system and specific selectors
- **Workflow Process**: Step-by-step process from ideation to implementation
- **Best Practices**: Guidelines for effective design iteration
- **Troubleshooting**: Solutions for common issues

@docs/scripts/design-iterations.mjs
@docs/scripts/screenshot-unified.mjs
@docs/docs/design-iterations/index.md 